/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PoliceWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DisasterHeadWorkRequest;
import Business.WorkQueue.EmergencyResponseUnitRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kichl
 */
public class PoliceAdminWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form PoliceAdmin
     */
    
    JPanel userProcessContainer;
    Enterprise enterprise;
    EcoSystem system;
    Organization organization;
    Network network;
    UserAccount account;
    
    public PoliceAdminWorkArea(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, Network network, EcoSystem ecosystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.system = system;
        this.organization = organization;
        this.network = network;
        this.account = account;
        populateTable();
    }
    
    private void populateTable() {

        DefaultTableModel model = (DefaultTableModel) workRequestTable.getModel();
        model.setRowCount(0);
        System.out.println(enterprise.getWorkQueue().getWorkRequestList());
        for (WorkRequest wr : enterprise.getWorkQueue().getWorkRequestList()) {
            if(wr instanceof EmergencyResponseUnitRequest) {
                Object[] row = new Object[7];
                row[0] = ((EmergencyResponseUnitRequest) wr).getId();
                row[1] = ((EmergencyResponseUnitRequest) wr).getDisasterType();
                row[2] = ((EmergencyResponseUnitRequest) wr).getSenderNetwork();
                row[3] = ((EmergencyResponseUnitRequest) wr).getZipCode();
                row[4] = ((EmergencyResponseUnitRequest) wr).getCasualties();
                row[5] = ((EmergencyResponseUnitRequest) wr).getRequestDate();
                //row[5] = ((EmergencyResponseUnitRequest) wr).getMessage();
                row[6] = ((EmergencyResponseUnitRequest) wr).getStatus();
//                row[7] = ((DisasterHeadWorkRequest) wr).getSenderOrganization().getName();
//                row[8] = ((DisasterHeadWorkRequest) wr).getSenderNetwork().getName();
                //row[9] = ((DisasterHeadWorkRequest) wr).getRequestDate();
                model.addRow(row);
            }
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        acceptDispatchBtn = new javax.swing.JButton();
        processDispatchBtn = new javax.swing.JButton();
        completeDispatchBtn = new javax.swing.JButton();
        rejectdispatchBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jLabel1.setText("POLICE ADMIN WORK AREA");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 50, -1, -1));

        acceptDispatchBtn.setBackground(new java.awt.Color(0, 0, 0));
        acceptDispatchBtn.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        acceptDispatchBtn.setForeground(new java.awt.Color(255, 255, 255));
        acceptDispatchBtn.setText("Accept Dispatch");
        acceptDispatchBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        acceptDispatchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptDispatchBtnActionPerformed(evt);
            }
        });
        add(acceptDispatchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 400, -1, -1));

        processDispatchBtn.setBackground(new java.awt.Color(0, 0, 0));
        processDispatchBtn.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        processDispatchBtn.setForeground(new java.awt.Color(255, 255, 255));
        processDispatchBtn.setText("Process Dispatch");
        processDispatchBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        processDispatchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processDispatchBtnActionPerformed(evt);
            }
        });
        add(processDispatchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 400, -1, -1));

        completeDispatchBtn.setBackground(new java.awt.Color(0, 0, 0));
        completeDispatchBtn.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        completeDispatchBtn.setForeground(new java.awt.Color(255, 255, 255));
        completeDispatchBtn.setText("Complete Dispatch");
        completeDispatchBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        completeDispatchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completeDispatchBtnActionPerformed(evt);
            }
        });
        add(completeDispatchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 400, -1, -1));

        rejectdispatchBtn.setBackground(new java.awt.Color(0, 0, 0));
        rejectdispatchBtn.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        rejectdispatchBtn.setForeground(new java.awt.Color(255, 255, 255));
        rejectdispatchBtn.setText("Reject Dispatch");
        rejectdispatchBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rejectdispatchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectdispatchBtnActionPerformed(evt);
            }
        });
        add(rejectdispatchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 400, -1, -1));

        workRequestTable.setBackground(new java.awt.Color(0, 0, 0));
        workRequestTable.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        workRequestTable.setForeground(new java.awt.Color(255, 255, 255));
        workRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Disaster ID", "Disaster Type", "Location", "Zipcode", "Casualties", "Date", "Status"
            }
        ));
        jScrollPane1.setViewportView(workRequestTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, 960, 100));
    }// </editor-fold>//GEN-END:initComponents

    private void acceptDispatchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptDispatchBtnActionPerformed

        int count = workRequestTable.getSelectedRowCount();
        if(count != 1) {
            JOptionPane.showMessageDialog(null, "Select a request");
        }else {
            int selectedRow = workRequestTable.getSelectedRow();
            DisasterHeadWorkRequest emerReq = (DisasterHeadWorkRequest) workRequestTable.getValueAt(selectedRow, 0);
            if(emerReq.getStatus().equals("Rejected")) {
                JOptionPane.showMessageDialog(null, "Request is already Rejected");
            }else if(emerReq.getStatus().equals("Accepted")) {
                JOptionPane.showMessageDialog(null, "Request is already Accepted");
            }else if(emerReq.getStatus().equals("Processing")) {
                JOptionPane.showMessageDialog(null, "Request is already Processing");
            }else if(emerReq.getStatus().equals("Completed")) {
                JOptionPane.showMessageDialog(null, "Request is already Completed");
            }else if(emerReq.getStatus().equals("Cancelled")) {
                JOptionPane.showMessageDialog(null, "Request is already cancelled by sender");
            }else {
                String msg = JOptionPane.showInputDialog("Additional Message");
                emerReq.setStatus("Accepted");
                emerReq.setMessage(msg);
                populateTable();
            }
      
        }
        
    }//GEN-LAST:event_acceptDispatchBtnActionPerformed

    private void processDispatchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processDispatchBtnActionPerformed
        // TODO add your handling code here:
        
        int count = workRequestTable.getSelectedRowCount();
        if (count != 1) {
            JOptionPane.showMessageDialog(null, "Select one row", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            int selectedRow = workRequestTable.getSelectedRow();
            DisasterHeadWorkRequest emerReq = (DisasterHeadWorkRequest) workRequestTable.getValueAt(selectedRow, 0);
            if(emerReq.getStatus().equals("Cancelled")) {
                JOptionPane.showMessageDialog(null, "Request is already cancelled by sender");
            }else if(emerReq.getStatus().equals("Processing")){
                JOptionPane.showMessageDialog(null, "Request is already Processing");
            }else if(emerReq.getStatus().equals("Rejected")){
                JOptionPane.showMessageDialog(null, "Request is already Rejected");
            }else if(emerReq.getStatus().equals("Completed")){
                JOptionPane.showMessageDialog(null, "Request is already Completed");
            }else if(emerReq.getStatus().equals("Requested")) {
                JOptionPane.showMessageDialog(null, "Request is not yet Accepted");
            }else {
                String msg = JOptionPane.showInputDialog("Additional Message");                
                emerReq.setStatus("Processing");
                emerReq.setMessage(msg);
                populateTable();
            }            
        }

        
        
    }//GEN-LAST:event_processDispatchBtnActionPerformed

    private void completeDispatchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completeDispatchBtnActionPerformed

        int count = workRequestTable.getSelectedRowCount();
        if(count != 1) {
            JOptionPane.showMessageDialog(null, "Select a request");
        }else {
            int selectedRow = workRequestTable.getSelectedRow();
            DisasterHeadWorkRequest emerReq = (DisasterHeadWorkRequest) workRequestTable.getValueAt(selectedRow, 0);
            if(emerReq.getStatus().equals("Rejected")) {
                JOptionPane.showMessageDialog(null, "Request is already Rejected");
            }else if(emerReq.getStatus().equals("Accepted")) {
                JOptionPane.showMessageDialog(null, "Request should be in processing state before marking complete");
            }else if(emerReq.getStatus().equals("Completed")) {
                JOptionPane.showMessageDialog(null, "Request is already Completed");
            }else if(emerReq.getStatus().equals("Cancelled")) {
                JOptionPane.showMessageDialog(null, "Request is already cancelled by sender");
            }else if(emerReq.getStatus().equals("Requested")) {
                JOptionPane.showMessageDialog(null, "Request is not yet Accepted");
            }else {
                String msg = JOptionPane.showInputDialog("Additional Message");
                emerReq.setStatus("Completed");
                emerReq.setMessage(msg);
                populateTable();
            }
        }
    }//GEN-LAST:event_completeDispatchBtnActionPerformed

    private void rejectdispatchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectdispatchBtnActionPerformed
int count = workRequestTable.getSelectedRowCount();
        if(count != 1) {
            JOptionPane.showMessageDialog(null, "Select a request");
        }else {
            int selectedRow = workRequestTable.getSelectedRow();
            DisasterHeadWorkRequest emerReq = (DisasterHeadWorkRequest) workRequestTable.getValueAt(selectedRow, 0);
            if(emerReq.getStatus().equals("Rejected")) {
                JOptionPane.showMessageDialog(null, "Request is already Rejected");
            }else if(emerReq.getStatus().equals("Accepted")) {
                JOptionPane.showMessageDialog(null, "Request is already Accepted");
            }else if(emerReq.getStatus().equals("Processing")) {
                JOptionPane.showMessageDialog(null, "Request is already Accepted and Processing");
            }else if(emerReq.getStatus().equals("Completed")) {
                JOptionPane.showMessageDialog(null, "Request is already Completed");
            }else if(emerReq.getStatus().equals("Cancelled")) {
                JOptionPane.showMessageDialog(null, "Request is already cancelled by sender");
            }else {
                String msg = JOptionPane.showInputDialog("Additional Message");
                emerReq.setStatus("Rejected");
                emerReq.setMessage(msg);
                populateTable();
            }
        }
        
        
    }//GEN-LAST:event_rejectdispatchBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptDispatchBtn;
    private javax.swing.JButton completeDispatchBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processDispatchBtn;
    private javax.swing.JButton rejectdispatchBtn;
    private javax.swing.JTable workRequestTable;
    // End of variables declaration//GEN-END:variables
}
