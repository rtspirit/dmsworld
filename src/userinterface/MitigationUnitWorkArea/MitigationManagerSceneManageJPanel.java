/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.MitigationUnitWorkArea;

import userinterface.DisasterManagementHead.*;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.DisasterManagementOrganization;
import Business.Organization.Organization;
import Business.Role.ReportingAdmin;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.MitigationUnitAdminRequest;
import Business.WorkQueue.VolunteerUnitRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javafx.scene.Scene;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dhankuwarsisodiya
 */
public class MitigationManagerSceneManageJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DisasterAdminSceneManageJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    Organization organization;
    Enterprise enterprise;
    Network network;
    EcoSystem business;

    public MitigationManagerSceneManageJPanel(JPanel userProcessContainer, Enterprise enterprise, EcoSystem business, Organization organization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.business = business;
        this.organization = organization;
        populateTable();
        populateSiteNameCombo();
        populateSiteManagerCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblManageAssigned = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        siteNameComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        sceneManagerCombo = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1058, 840));
        setPreferredSize(new java.awt.Dimension(1058, 840));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setForeground(new java.awt.Color(0, 102, 255));

        tblManageAssigned.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        tblManageAssigned.setForeground(new java.awt.Color(25, 56, 82));
        tblManageAssigned.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Scene Id", "Scene Name ", "Sender", "Assigned Reporting Admin", "Zip Code", "No of Victims", "Location", "Estimated Loss", "Status", "Creatd Date", " Message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblManageAssigned.setSelectionBackground(new java.awt.Color(56, 90, 174));
        jScrollPane1.setViewportView(tblManageAssigned);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 990, 220));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(25, 56, 82));
        jLabel1.setText("Site Name");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 365, -1, 20));

        siteNameComboBox.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        siteNameComboBox.setForeground(new java.awt.Color(25, 56, 82));
        siteNameComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(siteNameComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 360, 190, -1));

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(25, 56, 82));
        jLabel2.setText("Reporting Admin");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 400, -1, 20));

        sceneManagerCombo.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        sceneManagerCombo.setForeground(new java.awt.Color(25, 56, 82));
        sceneManagerCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(sceneManagerCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 400, 190, -1));

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(25, 56, 82));
        jButton2.setText("Assign");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 450, -1, -1));

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(25, 56, 82));
        jLabel3.setText("MANAGE  INCIDENT SCENE");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(306, 13, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/IncidentOPAQUESCENE.png"))); // NOI18N
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 1010, 450));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/crime128x.png"))); // NOI18N
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        VolunteerUnitRequest scene = (VolunteerUnitRequest) siteNameComboBox.getSelectedItem();
        Employee employee = (Employee) sceneManagerCombo.getSelectedItem();
        if(scene == null || employee == null){
            JOptionPane.showMessageDialog(null,"Select a scene and a reporting manager");
        } else{
            String msg = JOptionPane.showInputDialog("Additional Message");
        
        scene.setSceneManager(employee);
        scene.setMessage(msg);
        scene.setStatus("Assigned Reporting Admin");
        for(Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
            for (UserAccount u : o.getUserAccountDirectory().getUserAccountList()) {
                if (u.getEmployee().getId() == (employee.getId())) {
                    u.getWorkQueue().getWorkRequestList().add(scene);
                }
            }
        }  

        JOptionPane.showMessageDialog(null, "Reporting admin is assigned successfully");
        populateTable();
        populateSiteNameCombo();
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox sceneManagerCombo;
    private javax.swing.JComboBox siteNameComboBox;
    private javax.swing.JTable tblManageAssigned;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblManageAssigned.getModel();
        model.setRowCount(0);

        for (WorkRequest wr : enterprise.getWorkQueue().getWorkRequestList()) {
            if (wr instanceof VolunteerUnitRequest) {
                Object[] row = new Object[model.getColumnCount()];
                row[0] = ((VolunteerUnitRequest) wr);
                row[1] = ((VolunteerUnitRequest) wr).getSceneName();
                row[2] = ((VolunteerUnitRequest) wr).getSender().getEmployee().getName() == null ? "" : ((VolunteerUnitRequest) wr).getSender().getEmployee().getName();
                row[3] = ((VolunteerUnitRequest) wr).getSceneManager() == null ? "" : ((VolunteerUnitRequest) wr).getSceneManager().getName();
                row[4] = ((VolunteerUnitRequest) wr).getSceneZipcode();
                row[5] = ((VolunteerUnitRequest) wr).getNoOfVictims();
                //row[6] = ((VolunteerUnitRequest) wr).getSceneLocationPoint();
                row[7] = ((VolunteerUnitRequest) wr).getEstimatedLoss();
                row[8] = ((VolunteerUnitRequest) wr).getStatus();
                row[9] = ((VolunteerUnitRequest) wr).getRequestDate();
                row[10] = ((VolunteerUnitRequest) wr).getMessage();
                model.addRow(row);
            }
        }

    }

    private void populateSiteNameCombo() {
        siteNameComboBox.removeAllItems();
        for (WorkRequest wr : enterprise.getWorkQueue().getWorkRequestList()) {
            if(wr instanceof VolunteerUnitRequest && ((VolunteerUnitRequest) wr).getSceneManager() == null) {
                siteNameComboBox.addItem(((VolunteerUnitRequest) wr));
            }
            
        }
    }

    private void populateSiteManagerCombo() {
        sceneManagerCombo.removeAllItems();
        for(Organization o : enterprise.getOrganizationDirectory().getOrganizationList()) {
            for (UserAccount u : o.getUserAccountDirectory().getUserAccountList()) {
                if (u.getRole() instanceof ReportingAdmin) {
                    sceneManagerCombo.addItem(u.getEmployee());
                }
            }
        }
    }
}
